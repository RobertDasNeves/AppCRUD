<!DOCTYPE html>
<html lang="pt-BR">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AMA TEAmigos</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css"
        integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">

    <style>
        :root {
            --violet-color: #cf8bff;
            --red-color: #ff0000;
            --paleta: #6c47fe;
            --paleta2: #0802fd;
        }



        #main {
            display: flex;
            justify-content: center;
        }

        button {
            width: 100px;
            font-size: 20px;
            cursor: pointer;
            box-shadow: 0px 0px 2px gray;
            border: none;
            outline: none;
            padding: 5px;
            border-radius: 5px;
            color: black;
        }

        #header {
            padding: 10px;
            color: var(--violet-color);
            text-transform: uppercase;
            font-size: 26px;
            font-family: sans-serif;
            display: flex;
            justify-content: space-between;
        }

        #header button {
            background-color: var(--violet-color);
        }

        #container {
            width: 770px;
            margin-top: 100px;
        }

        #weekdays {
            width: 100%;
            display: flex;
            color: var(--violet-color);
        }

        #weekdays div {
            width: 110px;
            padding: 10px;
        }

        #calendar {
            width: 100%;
            margin: auto;
            display: flex;
            flex-wrap: wrap;
        }

        .day {
            width: 100px;
            padding: 10px;
            height: 100px;
            cursor: pointer;
            box-sizing: border-box;
            background-color: var(--violet-color);
            margin: 5px;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            border: 1px solid white;
            border-radius: 15%;
        }

        .day:hover {
            background-color: var(--paleta);
        }

        .day+#currentDay {
            background-color: var(--paleta2);
        }

        .event {
            font-size: 10px;
            padding: 3px;
            background-color: var(--paleta2);
            color: white;
            border-radius: 5px;
            max-height: 55px;
            overflow: hidden;
        }

        .padding {
            cursor: default !important;
            background-color: white !important;
            box-shadow: none !important;
            border: none;
        }

        #newEventModal,
        #deleteEventModal {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 20;
            padding: 20px;
            background-color: var(--violet-color);
            border-radius: 10px;
            width: 80vw;
            max-width: 350px;
            box-sizing: border-box;
            color: white;
        }

        #eventTitleInput {
            padding: 10px;
            width: 100%;
            box-sizing: border-box;
            margin-bottom: 25px;
            border-radius: 3px;
            outline: none;
            border: none;
            box-shadow: 0px 0px 3px gray;
        }

        #eventTitleInput.error {
            border: 2px solid red;
        }

        #cancelButton,
        #deleteButton {
            background-color: var(--paleta);
        }

        #saveButton,
        #closeButton {
            background-color: var(--paleta);
        }

        #eventText {
            font-size: 14px;
        }

        #modalBackDrop {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            z-index: 10;
            width: 100vw;
            height: 100vh;
            background-color: rgba(0, 0, 0, 0.8);
        }

        h2 {
            padding-bottom: 5px;
        }
    </style>

</head>

<body>
    <div class="container-fluid"
        style="background: linear-gradient(90deg, #36c6c6, #000080); position: fixed; z-index: 1;">
        <header class="d-flex align-items-center justify-content-center justify-content-md-between mb-4 border-bottom">
            <ul class="nav col-12 col-md-auto mb-2 justify-content-center mb-md-0">
                <li><a href="/" class="nav-link px-2 link-secondary" style="color: white; font-size: 30px;">AMA TEAmigos</a>
                </li>
            </ul>
        </header>
    </div>

    <div id="main">
        <div id="container">
            <div id="header">
                <div id="monthDisplay" style="color: black;"></div>

                <div style="color: black;">
                    <button id="backButton">Voltar</button>
                    <button id="nextButton">Próximo</button>
                </div>

            </div>

            <div id="weekdays" style="color: black;">
                <div>Domingo</div>
                <div>Segunda-feira</div>
                <div>Terça-feira</div>
                <div>Quarta-feira</div>
                <div>Quinta-feira</div>
                <div>Sexta-feira</div>
                <div>Sábado</div>
            </div>

            <div id="calendar"></div>


        </div>

        <div id="newEventModal">
            <h2>Novo tarefa:</h2>

            <input id="eventTitleInput" placeholder="Descrição" />

            <button id="saveButton"> Salvar</button>
            <button id="cancelButton">Cancelar</button>
        </div>

        <div id="deleteEventModal">
            <h2>Evento: </h2>

            <div id="eventText"></div><br>


            <button id="deleteButton">Deletar</button>
            <button id="closeButton">Fechar</button>
        </div>

        <div id="modalBackDrop"></div>


    </div>

    <script>
        let nav = 0
        let clicked = null
        let events = localStorage.getItem('events') ? JSON.parse(localStorage.getItem('events')) : []


        const newEvent = document.getElementById('newEventModal')
        const deleteEventModal = document.getElementById('deleteEventModal')
        const backDrop = document.getElementById('modalBackDrop')
        const eventTitleInput = document.getElementById('eventTitleInput')

        const calendar = document.getElementById('calendar')
        const weekdays = ['domingo', 'segunda-feira', 'terça-feira', 'quarta-feira', 'quinta-feira', 'sexta-feira', 'sábado']


        function openModal(date) {
            clicked = date
            const eventDay = events.find((event) => event.date === clicked)


            if (eventDay) {
                document.getElementById('eventText').innerText = eventDay.title
                deleteEventModal.style.display = 'block'


            } else {
                newEvent.style.display = 'block'

            }

            backDrop.style.display = 'block'
        }


        function load() {
            const date = new Date()


            if (nav !== 0) {
                date.setMonth(new Date().getMonth() + nav)
            }

            const day = date.getDate()
            const month = date.getMonth()
            const year = date.getFullYear()


            const daysMonth = new Date(year, month + 1, 0).getDate()
            const firstDayMonth = new Date(year, month, 1)


            const dateString = firstDayMonth.toLocaleDateString('pt-br', {
                weekday: 'long',
                year: 'numeric',
                month: 'numeric',
                day: 'numeric',
            })


            const paddinDays = weekdays.indexOf(dateString.split(', ')[0])

            document.getElementById('monthDisplay').innerText = `${date.toLocaleDateString('pt-br', { month: 'long' })}, ${year}`


            calendar.innerHTML = ''

            for (let i = 1; i <= paddinDays + daysMonth; i++) {
                const dayS = document.createElement('div')
                dayS.classList.add('day')

                const dayString = `${month + 1}/${i - paddinDays}/${year}`

                if (i > paddinDays) {
                    dayS.innerText = i - paddinDays


                    const eventDay = events.find(event => event.date === dayString)

                    if (i - paddinDays === day && nav === 0) {
                        dayS.id = 'currentDay'
                    }


                    if (eventDay) {
                        const eventDiv = document.createElement('div')
                        eventDiv.classList.add('event')
                        eventDiv.innerText = eventDay.title
                        dayS.appendChild(eventDiv)

                    }

                    dayS.addEventListener('click', () => openModal(dayString))

                } else {
                    dayS.classList.add('padding')
                }


                calendar.appendChild(dayS)
            }
        }

        function closeModal() {
            eventTitleInput.classList.remove('error')
            newEvent.style.display = 'none'
            backDrop.style.display = 'none'
            deleteEventModal.style.display = 'none'

            eventTitleInput.value = ''
            clicked = null
            load()

        }
        function saveEvent() {
            if (eventTitleInput.value) {
                eventTitleInput.classList.remove('error')

                events.push({
                    date: clicked,
                    title: eventTitleInput.value
                })

                localStorage.setItem('events', JSON.stringify(events))
                closeModal()

            } else {
                eventTitleInput.classList.add('error')
            }
        }

        function deleteEvent() {

            events = events.filter(event => event.date !== clicked)
            localStorage.setItem('events', JSON.stringify(events))
            closeModal()
        }

        function buttons() {
            document.getElementById('backButton').addEventListener('click', () => {
                nav--
                load()

            })

            document.getElementById('nextButton').addEventListener('click', () => {
                nav++
                load()

            })

            document.getElementById('saveButton').addEventListener('click', () => saveEvent())

            document.getElementById('cancelButton').addEventListener('click', () => closeModal())

            document.getElementById('deleteButton').addEventListener('click', () => deleteEvent())

            document.getElementById('closeButton').addEventListener('click', () => closeModal())

        }
        buttons()
        load()
    </script>

</body>

</html>